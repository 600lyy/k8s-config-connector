//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	dataprocv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/apis/dataproc/v1alpha1"
	"github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AspectTypeRef) DeepCopyInto(out *AspectTypeRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AspectTypeRef.
func (in *AspectTypeRef) DeepCopy() *AspectTypeRef {
	if in == nil {
		return nil
	}
	out := new(AspectTypeRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssetStatus) DeepCopyInto(out *AssetStatus) {
	*out = *in
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.ActiveAssets != nil {
		in, out := &in.ActiveAssets, &out.ActiveAssets
		*out = new(int32)
		**out = **in
	}
	if in.SecurityPolicyApplyingAssets != nil {
		in, out := &in.SecurityPolicyApplyingAssets, &out.SecurityPolicyApplyingAssets
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssetStatus.
func (in *AssetStatus) DeepCopy() *AssetStatus {
	if in == nil {
		return nil
	}
	out := new(AssetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Content) DeepCopyInto(out *Content) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DataText != nil {
		in, out := &in.DataText, &out.DataText
		*out = new(string)
		**out = **in
	}
	if in.SQLScript != nil {
		in, out := &in.SQLScript, &out.SQLScript
		*out = new(Content_SQLScript)
		(*in).DeepCopyInto(*out)
	}
	if in.Notebook != nil {
		in, out := &in.Notebook, &out.Notebook
		*out = new(Content_Notebook)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Content.
func (in *Content) DeepCopy() *Content {
	if in == nil {
		return nil
	}
	out := new(Content)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContentObservedState) DeepCopyInto(out *ContentObservedState) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContentObservedState.
func (in *ContentObservedState) DeepCopy() *ContentObservedState {
	if in == nil {
		return nil
	}
	out := new(ContentObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Content_Notebook) DeepCopyInto(out *Content_Notebook) {
	*out = *in
	if in.KernelType != nil {
		in, out := &in.KernelType, &out.KernelType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Content_Notebook.
func (in *Content_Notebook) DeepCopy() *Content_Notebook {
	if in == nil {
		return nil
	}
	out := new(Content_Notebook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Content_SQLScript) DeepCopyInto(out *Content_SQLScript) {
	*out = *in
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Content_SQLScript.
func (in *Content_SQLScript) DeepCopy() *Content_SQLScript {
	if in == nil {
		return nil
	}
	out := new(Content_SQLScript)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexEntryGroup) DeepCopyInto(out *DataplexEntryGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexEntryGroup.
func (in *DataplexEntryGroup) DeepCopy() *DataplexEntryGroup {
	if in == nil {
		return nil
	}
	out := new(DataplexEntryGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataplexEntryGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexEntryGroupList) DeepCopyInto(out *DataplexEntryGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataplexEntryGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexEntryGroupList.
func (in *DataplexEntryGroupList) DeepCopy() *DataplexEntryGroupList {
	if in == nil {
		return nil
	}
	out := new(DataplexEntryGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataplexEntryGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexEntryGroupObservedState) DeepCopyInto(out *DataplexEntryGroupObservedState) {
	*out = *in
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.TransferStatus != nil {
		in, out := &in.TransferStatus, &out.TransferStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexEntryGroupObservedState.
func (in *DataplexEntryGroupObservedState) DeepCopy() *DataplexEntryGroupObservedState {
	if in == nil {
		return nil
	}
	out := new(DataplexEntryGroupObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexEntryGroupParent) DeepCopyInto(out *DataplexEntryGroupParent) {
	*out = *in
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1beta1.ProjectRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexEntryGroupParent.
func (in *DataplexEntryGroupParent) DeepCopy() *DataplexEntryGroupParent {
	if in == nil {
		return nil
	}
	out := new(DataplexEntryGroupParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexEntryGroupSpec) DeepCopyInto(out *DataplexEntryGroupSpec) {
	*out = *in
	in.DataplexEntryGroupParent.DeepCopyInto(&out.DataplexEntryGroupParent)
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexEntryGroupSpec.
func (in *DataplexEntryGroupSpec) DeepCopy() *DataplexEntryGroupSpec {
	if in == nil {
		return nil
	}
	out := new(DataplexEntryGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexEntryGroupStatus) DeepCopyInto(out *DataplexEntryGroupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(DataplexEntryGroupObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexEntryGroupStatus.
func (in *DataplexEntryGroupStatus) DeepCopy() *DataplexEntryGroupStatus {
	if in == nil {
		return nil
	}
	out := new(DataplexEntryGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexEntryType) DeepCopyInto(out *DataplexEntryType) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexEntryType.
func (in *DataplexEntryType) DeepCopy() *DataplexEntryType {
	if in == nil {
		return nil
	}
	out := new(DataplexEntryType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataplexEntryType) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexEntryTypeList) DeepCopyInto(out *DataplexEntryTypeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataplexEntryType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexEntryTypeList.
func (in *DataplexEntryTypeList) DeepCopy() *DataplexEntryTypeList {
	if in == nil {
		return nil
	}
	out := new(DataplexEntryTypeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataplexEntryTypeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexEntryTypeObservedState) DeepCopyInto(out *DataplexEntryTypeObservedState) {
	*out = *in
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexEntryTypeObservedState.
func (in *DataplexEntryTypeObservedState) DeepCopy() *DataplexEntryTypeObservedState {
	if in == nil {
		return nil
	}
	out := new(DataplexEntryTypeObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexEntryTypeParent) DeepCopyInto(out *DataplexEntryTypeParent) {
	*out = *in
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1beta1.ProjectRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexEntryTypeParent.
func (in *DataplexEntryTypeParent) DeepCopy() *DataplexEntryTypeParent {
	if in == nil {
		return nil
	}
	out := new(DataplexEntryTypeParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexEntryTypeSpec) DeepCopyInto(out *DataplexEntryTypeSpec) {
	*out = *in
	in.DataplexEntryTypeParent.DeepCopyInto(&out.DataplexEntryTypeParent)
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TypeAliases != nil {
		in, out := &in.TypeAliases, &out.TypeAliases
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Platform != nil {
		in, out := &in.Platform, &out.Platform
		*out = new(string)
		**out = **in
	}
	if in.System != nil {
		in, out := &in.System, &out.System
		*out = new(string)
		**out = **in
	}
	if in.RequiredAspects != nil {
		in, out := &in.RequiredAspects, &out.RequiredAspects
		*out = make([]EntryType_AspectInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = new(EntryType_Authorization)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexEntryTypeSpec.
func (in *DataplexEntryTypeSpec) DeepCopy() *DataplexEntryTypeSpec {
	if in == nil {
		return nil
	}
	out := new(DataplexEntryTypeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexEntryTypeStatus) DeepCopyInto(out *DataplexEntryTypeStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(DataplexEntryTypeObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexEntryTypeStatus.
func (in *DataplexEntryTypeStatus) DeepCopy() *DataplexEntryTypeStatus {
	if in == nil {
		return nil
	}
	out := new(DataplexEntryTypeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexLake) DeepCopyInto(out *DataplexLake) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexLake.
func (in *DataplexLake) DeepCopy() *DataplexLake {
	if in == nil {
		return nil
	}
	out := new(DataplexLake)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataplexLake) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexLakeList) DeepCopyInto(out *DataplexLakeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataplexLake, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexLakeList.
func (in *DataplexLakeList) DeepCopy() *DataplexLakeList {
	if in == nil {
		return nil
	}
	out := new(DataplexLakeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataplexLakeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexLakeObservedState) DeepCopyInto(out *DataplexLakeObservedState) {
	*out = *in
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.AssetStatus != nil {
		in, out := &in.AssetStatus, &out.AssetStatus
		*out = new(AssetStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.MetastoreStatus != nil {
		in, out := &in.MetastoreStatus, &out.MetastoreStatus
		*out = new(Lake_MetastoreStatus)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexLakeObservedState.
func (in *DataplexLakeObservedState) DeepCopy() *DataplexLakeObservedState {
	if in == nil {
		return nil
	}
	out := new(DataplexLakeObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexLakeSpec) DeepCopyInto(out *DataplexLakeSpec) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	in.Parent.DeepCopyInto(&out.Parent)
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(Lake_Metastore)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexLakeSpec.
func (in *DataplexLakeSpec) DeepCopy() *DataplexLakeSpec {
	if in == nil {
		return nil
	}
	out := new(DataplexLakeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexLakeStatus) DeepCopyInto(out *DataplexLakeStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(DataplexLakeObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexLakeStatus.
func (in *DataplexLakeStatus) DeepCopy() *DataplexLakeStatus {
	if in == nil {
		return nil
	}
	out := new(DataplexLakeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexZone) DeepCopyInto(out *DataplexZone) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexZone.
func (in *DataplexZone) DeepCopy() *DataplexZone {
	if in == nil {
		return nil
	}
	out := new(DataplexZone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataplexZone) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexZoneList) DeepCopyInto(out *DataplexZoneList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataplexZone, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexZoneList.
func (in *DataplexZoneList) DeepCopy() *DataplexZoneList {
	if in == nil {
		return nil
	}
	out := new(DataplexZoneList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataplexZoneList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexZoneObservedState) DeepCopyInto(out *DataplexZoneObservedState) {
	*out = *in
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.AssetStatus != nil {
		in, out := &in.AssetStatus, &out.AssetStatus
		*out = new(AssetStatus)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexZoneObservedState.
func (in *DataplexZoneObservedState) DeepCopy() *DataplexZoneObservedState {
	if in == nil {
		return nil
	}
	out := new(DataplexZoneObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexZoneParent) DeepCopyInto(out *DataplexZoneParent) {
	*out = *in
	if in.LakeRef != nil {
		in, out := &in.LakeRef, &out.LakeRef
		*out = new(LakeRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexZoneParent.
func (in *DataplexZoneParent) DeepCopy() *DataplexZoneParent {
	if in == nil {
		return nil
	}
	out := new(DataplexZoneParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexZoneSpec) DeepCopyInto(out *DataplexZoneSpec) {
	*out = *in
	in.DataplexZoneParent.DeepCopyInto(&out.DataplexZoneParent)
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.DiscoverySpec != nil {
		in, out := &in.DiscoverySpec, &out.DiscoverySpec
		*out = new(Zone_DiscoverySpec)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceSpec != nil {
		in, out := &in.ResourceSpec, &out.ResourceSpec
		*out = new(Zone_ResourceSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexZoneSpec.
func (in *DataplexZoneSpec) DeepCopy() *DataplexZoneSpec {
	if in == nil {
		return nil
	}
	out := new(DataplexZoneSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataplexZoneStatus) DeepCopyInto(out *DataplexZoneStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(DataplexZoneObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataplexZoneStatus.
func (in *DataplexZoneStatus) DeepCopy() *DataplexZoneStatus {
	if in == nil {
		return nil
	}
	out := new(DataplexZoneStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryGroup) DeepCopyInto(out *EntryGroup) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryGroup.
func (in *EntryGroup) DeepCopy() *EntryGroup {
	if in == nil {
		return nil
	}
	out := new(EntryGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryGroupIdentity) DeepCopyInto(out *EntryGroupIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(EntryGroupParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryGroupIdentity.
func (in *EntryGroupIdentity) DeepCopy() *EntryGroupIdentity {
	if in == nil {
		return nil
	}
	out := new(EntryGroupIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryGroupObservedState) DeepCopyInto(out *EntryGroupObservedState) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.TransferStatus != nil {
		in, out := &in.TransferStatus, &out.TransferStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryGroupObservedState.
func (in *EntryGroupObservedState) DeepCopy() *EntryGroupObservedState {
	if in == nil {
		return nil
	}
	out := new(EntryGroupObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryGroupParent) DeepCopyInto(out *EntryGroupParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryGroupParent.
func (in *EntryGroupParent) DeepCopy() *EntryGroupParent {
	if in == nil {
		return nil
	}
	out := new(EntryGroupParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryGroupRef) DeepCopyInto(out *EntryGroupRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryGroupRef.
func (in *EntryGroupRef) DeepCopy() *EntryGroupRef {
	if in == nil {
		return nil
	}
	out := new(EntryGroupRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryType) DeepCopyInto(out *EntryType) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.TypeAliases != nil {
		in, out := &in.TypeAliases, &out.TypeAliases
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Platform != nil {
		in, out := &in.Platform, &out.Platform
		*out = new(string)
		**out = **in
	}
	if in.System != nil {
		in, out := &in.System, &out.System
		*out = new(string)
		**out = **in
	}
	if in.RequiredAspects != nil {
		in, out := &in.RequiredAspects, &out.RequiredAspects
		*out = make([]EntryType_AspectInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = new(EntryType_Authorization)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryType.
func (in *EntryType) DeepCopy() *EntryType {
	if in == nil {
		return nil
	}
	out := new(EntryType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryTypeIdentity) DeepCopyInto(out *EntryTypeIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(EntryTypeParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryTypeIdentity.
func (in *EntryTypeIdentity) DeepCopy() *EntryTypeIdentity {
	if in == nil {
		return nil
	}
	out := new(EntryTypeIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryTypeObservedState) DeepCopyInto(out *EntryTypeObservedState) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryTypeObservedState.
func (in *EntryTypeObservedState) DeepCopy() *EntryTypeObservedState {
	if in == nil {
		return nil
	}
	out := new(EntryTypeObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryTypeParent) DeepCopyInto(out *EntryTypeParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryTypeParent.
func (in *EntryTypeParent) DeepCopy() *EntryTypeParent {
	if in == nil {
		return nil
	}
	out := new(EntryTypeParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryTypeRef) DeepCopyInto(out *EntryTypeRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryTypeRef.
func (in *EntryTypeRef) DeepCopy() *EntryTypeRef {
	if in == nil {
		return nil
	}
	out := new(EntryTypeRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryType_AspectInfo) DeepCopyInto(out *EntryType_AspectInfo) {
	*out = *in
	if in.TypeRef != nil {
		in, out := &in.TypeRef, &out.TypeRef
		*out = new(AspectTypeRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryType_AspectInfo.
func (in *EntryType_AspectInfo) DeepCopy() *EntryType_AspectInfo {
	if in == nil {
		return nil
	}
	out := new(EntryType_AspectInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryType_Authorization) DeepCopyInto(out *EntryType_Authorization) {
	*out = *in
	if in.AlternateUsePermission != nil {
		in, out := &in.AlternateUsePermission, &out.AlternateUsePermission
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryType_Authorization.
func (in *EntryType_Authorization) DeepCopy() *EntryType_Authorization {
	if in == nil {
		return nil
	}
	out := new(EntryType_Authorization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Environment) DeepCopyInto(out *Environment) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.InfrastructureSpec != nil {
		in, out := &in.InfrastructureSpec, &out.InfrastructureSpec
		*out = new(Environment_InfrastructureSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.SessionSpec != nil {
		in, out := &in.SessionSpec, &out.SessionSpec
		*out = new(Environment_SessionSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Environment.
func (in *Environment) DeepCopy() *Environment {
	if in == nil {
		return nil
	}
	out := new(Environment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentObservedState) DeepCopyInto(out *EnvironmentObservedState) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SessionStatus != nil {
		in, out := &in.SessionStatus, &out.SessionStatus
		*out = new(Environment_SessionStatusObservedState)
		(*in).DeepCopyInto(*out)
	}
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = new(Environment_EndpointsObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentObservedState.
func (in *EnvironmentObservedState) DeepCopy() *EnvironmentObservedState {
	if in == nil {
		return nil
	}
	out := new(EnvironmentObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Environment_Endpoints) DeepCopyInto(out *Environment_Endpoints) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Environment_Endpoints.
func (in *Environment_Endpoints) DeepCopy() *Environment_Endpoints {
	if in == nil {
		return nil
	}
	out := new(Environment_Endpoints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Environment_EndpointsObservedState) DeepCopyInto(out *Environment_EndpointsObservedState) {
	*out = *in
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(string)
		**out = **in
	}
	if in.SQL != nil {
		in, out := &in.SQL, &out.SQL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Environment_EndpointsObservedState.
func (in *Environment_EndpointsObservedState) DeepCopy() *Environment_EndpointsObservedState {
	if in == nil {
		return nil
	}
	out := new(Environment_EndpointsObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Environment_InfrastructureSpec) DeepCopyInto(out *Environment_InfrastructureSpec) {
	*out = *in
	if in.Compute != nil {
		in, out := &in.Compute, &out.Compute
		*out = new(Environment_InfrastructureSpec_ComputeResources)
		(*in).DeepCopyInto(*out)
	}
	if in.OSImage != nil {
		in, out := &in.OSImage, &out.OSImage
		*out = new(Environment_InfrastructureSpec_OSImageRuntime)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Environment_InfrastructureSpec.
func (in *Environment_InfrastructureSpec) DeepCopy() *Environment_InfrastructureSpec {
	if in == nil {
		return nil
	}
	out := new(Environment_InfrastructureSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Environment_InfrastructureSpec_ComputeResources) DeepCopyInto(out *Environment_InfrastructureSpec_ComputeResources) {
	*out = *in
	if in.DiskSizeGB != nil {
		in, out := &in.DiskSizeGB, &out.DiskSizeGB
		*out = new(int32)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(int32)
		**out = **in
	}
	if in.MaxNodeCount != nil {
		in, out := &in.MaxNodeCount, &out.MaxNodeCount
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Environment_InfrastructureSpec_ComputeResources.
func (in *Environment_InfrastructureSpec_ComputeResources) DeepCopy() *Environment_InfrastructureSpec_ComputeResources {
	if in == nil {
		return nil
	}
	out := new(Environment_InfrastructureSpec_ComputeResources)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Environment_InfrastructureSpec_OSImageRuntime) DeepCopyInto(out *Environment_InfrastructureSpec_OSImageRuntime) {
	*out = *in
	if in.ImageVersion != nil {
		in, out := &in.ImageVersion, &out.ImageVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaLibraries != nil {
		in, out := &in.JavaLibraries, &out.JavaLibraries
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PythonPackages != nil {
		in, out := &in.PythonPackages, &out.PythonPackages
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Environment_InfrastructureSpec_OSImageRuntime.
func (in *Environment_InfrastructureSpec_OSImageRuntime) DeepCopy() *Environment_InfrastructureSpec_OSImageRuntime {
	if in == nil {
		return nil
	}
	out := new(Environment_InfrastructureSpec_OSImageRuntime)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Environment_SessionSpec) DeepCopyInto(out *Environment_SessionSpec) {
	*out = *in
	if in.MaxIdleDuration != nil {
		in, out := &in.MaxIdleDuration, &out.MaxIdleDuration
		*out = new(string)
		**out = **in
	}
	if in.EnableFastStartup != nil {
		in, out := &in.EnableFastStartup, &out.EnableFastStartup
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Environment_SessionSpec.
func (in *Environment_SessionSpec) DeepCopy() *Environment_SessionSpec {
	if in == nil {
		return nil
	}
	out := new(Environment_SessionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Environment_SessionStatus) DeepCopyInto(out *Environment_SessionStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Environment_SessionStatus.
func (in *Environment_SessionStatus) DeepCopy() *Environment_SessionStatus {
	if in == nil {
		return nil
	}
	out := new(Environment_SessionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Environment_SessionStatusObservedState) DeepCopyInto(out *Environment_SessionStatusObservedState) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Environment_SessionStatusObservedState.
func (in *Environment_SessionStatusObservedState) DeepCopy() *Environment_SessionStatusObservedState {
	if in == nil {
		return nil
	}
	out := new(Environment_SessionStatusObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Lake) DeepCopyInto(out *Lake) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(Lake_Metastore)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Lake.
func (in *Lake) DeepCopy() *Lake {
	if in == nil {
		return nil
	}
	out := new(Lake)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeIdentity) DeepCopyInto(out *LakeIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(LakeParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeIdentity.
func (in *LakeIdentity) DeepCopy() *LakeIdentity {
	if in == nil {
		return nil
	}
	out := new(LakeIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeObservedState) DeepCopyInto(out *LakeObservedState) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.AssetStatus != nil {
		in, out := &in.AssetStatus, &out.AssetStatus
		*out = new(AssetStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.MetastoreStatus != nil {
		in, out := &in.MetastoreStatus, &out.MetastoreStatus
		*out = new(Lake_MetastoreStatus)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeObservedState.
func (in *LakeObservedState) DeepCopy() *LakeObservedState {
	if in == nil {
		return nil
	}
	out := new(LakeObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeParent) DeepCopyInto(out *LakeParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeParent.
func (in *LakeParent) DeepCopy() *LakeParent {
	if in == nil {
		return nil
	}
	out := new(LakeParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeRef) DeepCopyInto(out *LakeRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeRef.
func (in *LakeRef) DeepCopy() *LakeRef {
	if in == nil {
		return nil
	}
	out := new(LakeRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Lake_Metastore) DeepCopyInto(out *Lake_Metastore) {
	*out = *in
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(dataprocv1alpha1.ServiceRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Lake_Metastore.
func (in *Lake_Metastore) DeepCopy() *Lake_Metastore {
	if in == nil {
		return nil
	}
	out := new(Lake_Metastore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Lake_MetastoreStatus) DeepCopyInto(out *Lake_MetastoreStatus) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Lake_MetastoreStatus.
func (in *Lake_MetastoreStatus) DeepCopy() *Lake_MetastoreStatus {
	if in == nil {
		return nil
	}
	out := new(Lake_MetastoreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Parent) DeepCopyInto(out *Parent) {
	*out = *in
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1beta1.ProjectRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Parent.
func (in *Parent) DeepCopy() *Parent {
	if in == nil {
		return nil
	}
	out := new(Parent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Zone) DeepCopyInto(out *Zone) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.DiscoverySpec != nil {
		in, out := &in.DiscoverySpec, &out.DiscoverySpec
		*out = new(Zone_DiscoverySpec)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceSpec != nil {
		in, out := &in.ResourceSpec, &out.ResourceSpec
		*out = new(Zone_ResourceSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Zone.
func (in *Zone) DeepCopy() *Zone {
	if in == nil {
		return nil
	}
	out := new(Zone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneIdentity) DeepCopyInto(out *ZoneIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(LakeIdentity)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneIdentity.
func (in *ZoneIdentity) DeepCopy() *ZoneIdentity {
	if in == nil {
		return nil
	}
	out := new(ZoneIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneObservedState) DeepCopyInto(out *ZoneObservedState) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.AssetStatus != nil {
		in, out := &in.AssetStatus, &out.AssetStatus
		*out = new(AssetStatus)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneObservedState.
func (in *ZoneObservedState) DeepCopy() *ZoneObservedState {
	if in == nil {
		return nil
	}
	out := new(ZoneObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneRef) DeepCopyInto(out *ZoneRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneRef.
func (in *ZoneRef) DeepCopy() *ZoneRef {
	if in == nil {
		return nil
	}
	out := new(ZoneRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Zone_DiscoverySpec) DeepCopyInto(out *Zone_DiscoverySpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IncludePatterns != nil {
		in, out := &in.IncludePatterns, &out.IncludePatterns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludePatterns != nil {
		in, out := &in.ExcludePatterns, &out.ExcludePatterns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CsvOptions != nil {
		in, out := &in.CsvOptions, &out.CsvOptions
		*out = new(Zone_DiscoverySpec_CsvOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.JsonOptions != nil {
		in, out := &in.JsonOptions, &out.JsonOptions
		*out = new(Zone_DiscoverySpec_JsonOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Zone_DiscoverySpec.
func (in *Zone_DiscoverySpec) DeepCopy() *Zone_DiscoverySpec {
	if in == nil {
		return nil
	}
	out := new(Zone_DiscoverySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Zone_DiscoverySpec_CsvOptions) DeepCopyInto(out *Zone_DiscoverySpec_CsvOptions) {
	*out = *in
	if in.HeaderRows != nil {
		in, out := &in.HeaderRows, &out.HeaderRows
		*out = new(int32)
		**out = **in
	}
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.DisableTypeInference != nil {
		in, out := &in.DisableTypeInference, &out.DisableTypeInference
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Zone_DiscoverySpec_CsvOptions.
func (in *Zone_DiscoverySpec_CsvOptions) DeepCopy() *Zone_DiscoverySpec_CsvOptions {
	if in == nil {
		return nil
	}
	out := new(Zone_DiscoverySpec_CsvOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Zone_DiscoverySpec_JsonOptions) DeepCopyInto(out *Zone_DiscoverySpec_JsonOptions) {
	*out = *in
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.DisableTypeInference != nil {
		in, out := &in.DisableTypeInference, &out.DisableTypeInference
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Zone_DiscoverySpec_JsonOptions.
func (in *Zone_DiscoverySpec_JsonOptions) DeepCopy() *Zone_DiscoverySpec_JsonOptions {
	if in == nil {
		return nil
	}
	out := new(Zone_DiscoverySpec_JsonOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Zone_ResourceSpec) DeepCopyInto(out *Zone_ResourceSpec) {
	*out = *in
	if in.LocationType != nil {
		in, out := &in.LocationType, &out.LocationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Zone_ResourceSpec.
func (in *Zone_ResourceSpec) DeepCopy() *Zone_ResourceSpec {
	if in == nil {
		return nil
	}
	out := new(Zone_ResourceSpec)
	in.DeepCopyInto(out)
	return out
}
