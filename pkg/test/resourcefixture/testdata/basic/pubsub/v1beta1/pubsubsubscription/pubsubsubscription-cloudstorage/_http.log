POST https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}:getIamPolicy?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: google-api-go-client/0.5 kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

{
  "options": {
    "requestedPolicyVersion": 3
  }
}

200 OK
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "bindings": [
    {
      "members": [
        "serviceAccount:test-182c312e5f6dab7b@${projectId}.iam.gserviceaccount.com",
        "serviceAccount:test-maqiuyu-20250312@${projectId}.iam.gserviceaccount.com"
      ],
      "role": "roles/aiplatform.colabEnterpriseUser"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-vertex-nb.iam.gserviceaccount.com"
      ],
      "role": "roles/aiplatform.colabServiceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-aiplatform-cc.iam.gserviceaccount.com"
      ],
      "role": "roles/aiplatform.customCodeServiceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-aiplatform-vm.iam.gserviceaccount.com"
      ],
      "role": "roles/aiplatform.notebookServiceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-aiplatform.iam.gserviceaccount.com"
      ],
      "role": "roles/aiplatform.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
      ],
      "role": "roles/alloydb.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/artifactregistry.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-bms.iam.gserviceaccount.com"
      ],
      "role": "roles/baremetalsolution.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/bigquery.dataEditor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/bigquery.metadataViewer"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.builds.builder"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:test-cloud-identity@${projectId}.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudfunctions.admin"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcf-admin-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudfunctions.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-707226307554@compute-system.iam.gserviceaccount.com",
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com",
        "serviceAccount:service-${projectNumber}@gcp-sa-aiplatform.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.cryptoKeyEncrypterDecrypter"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@cloudcomposer-accounts.iam.gserviceaccount.com"
      ],
      "role": "roles/composer.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
      ],
      "role": "roles/compute.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkenode.iam.gserviceaccount.com"
      ],
      "role": "roles/container.nodeServiceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/container.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-analysis.iam.gserviceaccount.com"
      ],
      "role": "roles/containeranalysis.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/containerregistry.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@dataflow-service-producer-prod.iam.gserviceaccount.com"
      ],
      "role": "roles/dataflow.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@dataproc-accounts.iam.gserviceaccount.com"
      ],
      "role": "roles/dataproc.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-dialogflow.iam.gserviceaccount.com"
      ],
      "role": "roles/dialogflow.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@dlp-api.iam.gserviceaccount.com"
      ],
      "role": "roles/dlp.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
        "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "serviceAccount:gsa-b5db6k2b3pry2ulduirq@${projectId}.iam.gserviceaccount.com",
        "serviceAccount:${projectId}@appspot.gserviceaccount.com",
        "serviceAccount:service-${projectNumber}@cloudcomposer-accounts.iam.gserviceaccount.com",
        "serviceAccount:service-${projectNumber}@gcp-sa-yakima.iam.gserviceaccount.com",
        "serviceAccount:test-cloud-identity@${projectId}.iam.gserviceaccount.com"
      ],
      "role": "roles/editor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
      ],
      "role": "roles/firebaserules.system"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkeonprem.iam.gserviceaccount.com"
      ],
      "role": "roles/gkeonprem.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@cloudcomposer-accounts.iam.gserviceaccount.com"
      ],
      "role": "roles/iam.serviceAccountAdmin"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com"
      ],
      "role": "roles/iam.serviceAccountUser"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-krmapihosting.iam.gserviceaccount.com",
        "serviceAccount:service-${projectNumber}@gcp-sa-staging-krmapihosting.iam.gserviceaccount.com"
      ],
      "role": "roles/krmapihosting.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com"
      ],
      "role": "roles/monitoring.metricWriter"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
      ],
      "role": "roles/networkconnectivity.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkmanagement.iam.gserviceaccount.com"
      ],
      "role": "roles/networkmanagement.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "serviceAccount:cnrm-system@maqiuyu-kcc-test.iam.gserviceaccount.com",
        "serviceAccount:config-controller-test-sa@${projectId}.iam.gserviceaccount.com",
        "serviceAccount:service-${projectNumber}@gcp-sa-staging-yakima.iam.gserviceaccount.com",
        "user:maqiuyu@google.com"
      ],
      "role": "roles/owner"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-parallelstore.iam.gserviceaccount.com"
      ],
      "role": "roles/parallelstore.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:test-cloud-identity@${projectId}.iam.gserviceaccount.com"
      ],
      "role": "roles/privilegedaccessmanager.admin"
    },
    {
      "members": [
        "serviceAccount:service-org-${organizationID}@gcp-sa-pam.iam.gserviceaccount.com"
      ],
      "role": "roles/privilegedaccessmanager.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/pubsub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@cloud-redis.iam.gserviceaccount.com"
      ],
      "role": "roles/redis.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@serverless-robot-prod.iam.gserviceaccount.com"
      ],
      "role": "roles/run.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
      ],
      "role": "roles/servicenetworking.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com",
        "serviceAccount:service-${projectNumber}@gcp-sa-yakima.iam.gserviceaccount.com",
        "serviceAccount:test-182c312e5f6dab7b@${projectId}.iam.gserviceaccount.com",
        "serviceAccount:test-maqiuyu-20250312@${projectId}.iam.gserviceaccount.com"
      ],
      "role": "roles/storage.admin"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/storage.objectViewer"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-stream.iam.gserviceaccount.com"
      ],
      "role": "roles/stream.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-vpcaccess.iam.gserviceaccount.com"
      ],
      "role": "roles/vpcaccess.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-websecurityscanner.iam.gserviceaccount.com"
      ],
      "role": "roles/websecurityscanner.serviceAgent"
    }
  ],
  "etag": "abcdef0123A=",
  "version": 1
}

---

POST https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}:getIamPolicy?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: google-api-go-client/0.5 kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

{
  "options": {
    "requestedPolicyVersion": 3
  }
}

200 OK
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "bindings": [
    {
      "members": [
        "serviceAccount:test-182c312e5f6dab7b@${projectId}.iam.gserviceaccount.com",
        "serviceAccount:test-maqiuyu-20250312@${projectId}.iam.gserviceaccount.com"
      ],
      "role": "roles/aiplatform.colabEnterpriseUser"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-vertex-nb.iam.gserviceaccount.com"
      ],
      "role": "roles/aiplatform.colabServiceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-aiplatform-cc.iam.gserviceaccount.com"
      ],
      "role": "roles/aiplatform.customCodeServiceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-aiplatform-vm.iam.gserviceaccount.com"
      ],
      "role": "roles/aiplatform.notebookServiceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-aiplatform.iam.gserviceaccount.com"
      ],
      "role": "roles/aiplatform.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
      ],
      "role": "roles/alloydb.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/artifactregistry.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-bms.iam.gserviceaccount.com"
      ],
      "role": "roles/baremetalsolution.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/bigquery.dataEditor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/bigquery.metadataViewer"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.builds.builder"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:test-cloud-identity@${projectId}.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudfunctions.admin"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcf-admin-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudfunctions.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-707226307554@compute-system.iam.gserviceaccount.com",
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com",
        "serviceAccount:service-${projectNumber}@gcp-sa-aiplatform.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.cryptoKeyEncrypterDecrypter"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@cloudcomposer-accounts.iam.gserviceaccount.com"
      ],
      "role": "roles/composer.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
      ],
      "role": "roles/compute.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkenode.iam.gserviceaccount.com"
      ],
      "role": "roles/container.nodeServiceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/container.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-analysis.iam.gserviceaccount.com"
      ],
      "role": "roles/containeranalysis.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/containerregistry.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@dataflow-service-producer-prod.iam.gserviceaccount.com"
      ],
      "role": "roles/dataflow.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@dataproc-accounts.iam.gserviceaccount.com"
      ],
      "role": "roles/dataproc.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-dialogflow.iam.gserviceaccount.com"
      ],
      "role": "roles/dialogflow.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@dlp-api.iam.gserviceaccount.com"
      ],
      "role": "roles/dlp.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
        "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "serviceAccount:gsa-b5db6k2b3pry2ulduirq@${projectId}.iam.gserviceaccount.com",
        "serviceAccount:${projectId}@appspot.gserviceaccount.com",
        "serviceAccount:service-${projectNumber}@cloudcomposer-accounts.iam.gserviceaccount.com",
        "serviceAccount:service-${projectNumber}@gcp-sa-yakima.iam.gserviceaccount.com",
        "serviceAccount:test-cloud-identity@${projectId}.iam.gserviceaccount.com"
      ],
      "role": "roles/editor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
      ],
      "role": "roles/firebaserules.system"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkeonprem.iam.gserviceaccount.com"
      ],
      "role": "roles/gkeonprem.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@cloudcomposer-accounts.iam.gserviceaccount.com"
      ],
      "role": "roles/iam.serviceAccountAdmin"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com"
      ],
      "role": "roles/iam.serviceAccountUser"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-krmapihosting.iam.gserviceaccount.com",
        "serviceAccount:service-${projectNumber}@gcp-sa-staging-krmapihosting.iam.gserviceaccount.com"
      ],
      "role": "roles/krmapihosting.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com"
      ],
      "role": "roles/monitoring.metricWriter"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
      ],
      "role": "roles/networkconnectivity.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkmanagement.iam.gserviceaccount.com"
      ],
      "role": "roles/networkmanagement.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "serviceAccount:cnrm-system@maqiuyu-kcc-test.iam.gserviceaccount.com",
        "serviceAccount:config-controller-test-sa@${projectId}.iam.gserviceaccount.com",
        "serviceAccount:service-${projectNumber}@gcp-sa-staging-yakima.iam.gserviceaccount.com",
        "user:maqiuyu@google.com"
      ],
      "role": "roles/owner"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-parallelstore.iam.gserviceaccount.com"
      ],
      "role": "roles/parallelstore.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:test-cloud-identity@${projectId}.iam.gserviceaccount.com"
      ],
      "role": "roles/privilegedaccessmanager.admin"
    },
    {
      "members": [
        "serviceAccount:service-org-${organizationID}@gcp-sa-pam.iam.gserviceaccount.com"
      ],
      "role": "roles/privilegedaccessmanager.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/pubsub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@cloud-redis.iam.gserviceaccount.com"
      ],
      "role": "roles/redis.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@serverless-robot-prod.iam.gserviceaccount.com"
      ],
      "role": "roles/run.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
      ],
      "role": "roles/servicenetworking.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com",
        "serviceAccount:service-${projectNumber}@gcp-sa-yakima.iam.gserviceaccount.com",
        "serviceAccount:test-182c312e5f6dab7b@${projectId}.iam.gserviceaccount.com",
        "serviceAccount:test-maqiuyu-20250312@${projectId}.iam.gserviceaccount.com"
      ],
      "role": "roles/storage.admin"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/storage.objectViewer"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-stream.iam.gserviceaccount.com"
      ],
      "role": "roles/stream.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-vpcaccess.iam.gserviceaccount.com"
      ],
      "role": "roles/vpcaccess.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-websecurityscanner.iam.gserviceaccount.com"
      ],
      "role": "roles/websecurityscanner.serviceAgent"
    }
  ],
  "etag": "abcdef0123A=",
  "version": 1
}

---

GET https://pubsub.googleapis.com/v1/projects/${projectId}/topics/pubsubtopic-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

404 Not Found
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "error": {
    "code": 404,
    "message": "Resource not found (resource=pubsubtopic-${uniqueId}).",
    "status": "NOT_FOUND"
  }
}

---

PUT https://pubsub.googleapis.com/v1/projects/${projectId}/topics/pubsubtopic-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

{
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  }
}

200 OK
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "name": "projects/${projectId}/topics/pubsubtopic-${uniqueId}"
}

---

GET https://pubsub.googleapis.com/v1/projects/${projectId}/topics/pubsubtopic-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

200 OK
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "name": "projects/${projectId}/topics/pubsubtopic-${uniqueId}"
}

---

GET https://storage.googleapis.com/storage/v1/b/storagebucket-1-${uniqueId}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

404 Not Found
Content-Type: application/json; charset=UTF-8
Expires: Mon, 01 Jan 1990 00:00:00 GMT
Pragma: no-cache
Server: UploadServer
Vary: Origin
Vary: X-Origin

{
  "error": {
    "code": 404,
    "errors": [
      {
        "domain": "global",
        "message": "The specified bucket does not exist.",
        "reason": "notFound"
      }
    ],
    "message": "The specified bucket does not exist."
  }
}

---

POST https://storage.googleapis.com/storage/v1/b?alt=json&prettyPrint=false&project=${projectId}
Content-Type: application/json
User-Agent: google-api-go-client/0.5 kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

{
  "iamConfiguration": {
    "uniformBucketLevelAccess": {
      "enabled": false
    }
  },
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "lifecycle": {
    "rule": []
  },
  "name": "storagebucket-1-${uniqueId}",
  "storageClass": "STANDARD"
}

200 OK
Content-Type: application/json; charset=UTF-8
Expires: Mon, 01 Jan 1990 00:00:00 GMT
Pragma: no-cache
Server: UploadServer
Vary: Origin
Vary: X-Origin

{
  "etag": "abcdef0123A=",
  "generation": "1747815021939994950",
  "iamConfiguration": {
    "bucketPolicyOnly": {
      "enabled": false
    },
    "publicAccessPrevention": "inherited",
    "uniformBucketLevelAccess": {
      "enabled": false
    }
  },
  "id": "000000000000000000000",
  "kind": "storage#bucket",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "location": "US",
  "locationType": "multi-region",
  "metageneration": "1",
  "name": "storagebucket-1-${uniqueId}",
  "projectNumber": "${projectNumber}",
  "rpo": "DEFAULT",
  "selfLink": "https://www.googleapis.com/storage/v1/b/storagebucket-1-${uniqueId}",
  "softDeletePolicy": {
    "effectiveTime": "2024-04-01T12:34:56.123456Z",
    "retentionDurationSeconds": "604800"
  },
  "storageClass": "STANDARD",
  "timeCreated": "2024-04-01T12:34:56.123456Z",
  "updated": "2024-04-01T12:34:56.123456Z"
}

---

GET https://storage.googleapis.com/storage/v1/b/storagebucket-1-${uniqueId}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

200 OK
Content-Type: application/json; charset=UTF-8
Expires: {now+-1m}
Server: UploadServer
Vary: Origin
Vary: X-Origin

{
  "etag": "abcdef0123A=",
  "generation": "1747815021939994950",
  "iamConfiguration": {
    "bucketPolicyOnly": {
      "enabled": false
    },
    "publicAccessPrevention": "inherited",
    "uniformBucketLevelAccess": {
      "enabled": false
    }
  },
  "id": "000000000000000000000",
  "kind": "storage#bucket",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "location": "US",
  "locationType": "multi-region",
  "metageneration": "1",
  "name": "storagebucket-1-${uniqueId}",
  "projectNumber": "${projectNumber}",
  "rpo": "DEFAULT",
  "selfLink": "https://www.googleapis.com/storage/v1/b/storagebucket-1-${uniqueId}",
  "softDeletePolicy": {
    "effectiveTime": "2024-04-01T12:34:56.123456Z",
    "retentionDurationSeconds": "604800"
  },
  "storageClass": "STANDARD",
  "timeCreated": "2024-04-01T12:34:56.123456Z",
  "updated": "2024-04-01T12:34:56.123456Z"
}

---

GET https://storage.googleapis.com/storage/v1/b/storagebucket-2-${uniqueId}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

404 Not Found
Content-Type: application/json; charset=UTF-8
Expires: Mon, 01 Jan 1990 00:00:00 GMT
Pragma: no-cache
Server: UploadServer
Vary: Origin
Vary: X-Origin

{
  "error": {
    "code": 404,
    "errors": [
      {
        "domain": "global",
        "message": "The specified bucket does not exist.",
        "reason": "notFound"
      }
    ],
    "message": "The specified bucket does not exist."
  }
}

---

POST https://storage.googleapis.com/storage/v1/b?alt=json&prettyPrint=false&project=${projectId}
Content-Type: application/json
User-Agent: google-api-go-client/0.5 kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

{
  "iamConfiguration": {
    "uniformBucketLevelAccess": {
      "enabled": false
    }
  },
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "lifecycle": {
    "rule": []
  },
  "name": "storagebucket-2-${uniqueId}",
  "storageClass": "STANDARD"
}

200 OK
Content-Type: application/json; charset=UTF-8
Expires: Mon, 01 Jan 1990 00:00:00 GMT
Pragma: no-cache
Server: UploadServer
Vary: Origin
Vary: X-Origin

{
  "etag": "abcdef0123A=",
  "generation": "1747815023696708144",
  "iamConfiguration": {
    "bucketPolicyOnly": {
      "enabled": false
    },
    "publicAccessPrevention": "inherited",
    "uniformBucketLevelAccess": {
      "enabled": false
    }
  },
  "id": "000000000000000000000",
  "kind": "storage#bucket",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "location": "US",
  "locationType": "multi-region",
  "metageneration": "1",
  "name": "storagebucket-2-${uniqueId}",
  "projectNumber": "${projectNumber}",
  "rpo": "DEFAULT",
  "selfLink": "https://www.googleapis.com/storage/v1/b/storagebucket-2-${uniqueId}",
  "softDeletePolicy": {
    "effectiveTime": "2024-04-01T12:34:56.123456Z",
    "retentionDurationSeconds": "604800"
  },
  "storageClass": "STANDARD",
  "timeCreated": "2024-04-01T12:34:56.123456Z",
  "updated": "2024-04-01T12:34:56.123456Z"
}

---

GET https://storage.googleapis.com/storage/v1/b/storagebucket-2-${uniqueId}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

200 OK
Content-Type: application/json; charset=UTF-8
Expires: {now+0m}
Server: UploadServer
Vary: Origin
Vary: X-Origin

{
  "etag": "abcdef0123A=",
  "generation": "1747815023696708144",
  "iamConfiguration": {
    "bucketPolicyOnly": {
      "enabled": false
    },
    "publicAccessPrevention": "inherited",
    "uniformBucketLevelAccess": {
      "enabled": false
    }
  },
  "id": "000000000000000000000",
  "kind": "storage#bucket",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "location": "US",
  "locationType": "multi-region",
  "metageneration": "1",
  "name": "storagebucket-2-${uniqueId}",
  "projectNumber": "${projectNumber}",
  "rpo": "DEFAULT",
  "selfLink": "https://www.googleapis.com/storage/v1/b/storagebucket-2-${uniqueId}",
  "softDeletePolicy": {
    "effectiveTime": "2024-04-01T12:34:56.123456Z",
    "retentionDurationSeconds": "604800"
  },
  "storageClass": "STANDARD",
  "timeCreated": "2024-04-01T12:34:56.123456Z",
  "updated": "2024-04-01T12:34:56.123456Z"
}

---

GET https://pubsub.googleapis.com/v1/projects/${projectId}/subscriptions/pubsubsubscription-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

404 Not Found
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "error": {
    "code": 404,
    "message": "Resource not found (resource=pubsubsubscription-${uniqueId}).",
    "status": "NOT_FOUND"
  }
}

---

PUT https://pubsub.googleapis.com/v1/projects/${projectId}/subscriptions/pubsubsubscription-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

{
  "ackDeadlineSeconds": 600,
  "cloudStorageConfig": {
    "avroConfig": {
      "writeMetadata": true
    },
    "bucket": "storagebucket-1-${uniqueId}",
    "filenamePrefix": "test-prefix",
    "filenameSuffix": "test-suffix",
    "maxBytes": 10240,
    "maxDuration": "600s"
  },
  "deadLetterPolicy": {
    "deadLetterTopic": "projects/${projectId}/topics/pubsubtopic-${uniqueId}",
    "maxDeliveryAttempts": 100
  },
  "enableMessageOrdering": true,
  "expirationPolicy": {
    "ttl": "2592000s"
  },
  "filter": "attributes.type = \"key\"",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "messageRetentionDuration": "604800s",
  "retainAckedMessages": true,
  "retryPolicy": {
    "maximumBackoff": "600s",
    "minimumBackoff": "10s"
  },
  "topic": "projects/${projectId}/topics/pubsubtopic-${uniqueId}"
}

200 OK
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "ackDeadlineSeconds": 600,
  "cloudStorageConfig": {
    "avroConfig": {
      "writeMetadata": true
    },
    "bucket": "storagebucket-1-${uniqueId}",
    "filenamePrefix": "test-prefix",
    "filenameSuffix": "test-suffix",
    "maxBytes": "10240",
    "maxDuration": "600s",
    "state": "ACTIVE"
  },
  "deadLetterPolicy": {
    "deadLetterTopic": "projects/${projectId}/topics/pubsubtopic-${uniqueId}",
    "maxDeliveryAttempts": 100
  },
  "enableMessageOrdering": true,
  "expirationPolicy": {
    "ttl": "2592000s"
  },
  "filter": "attributes.type = \"key\"",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "messageRetentionDuration": "604800s",
  "name": "projects/${projectId}/subscriptions/pubsubsubscription-${uniqueId}",
  "pushConfig": {},
  "retainAckedMessages": true,
  "retryPolicy": {
    "maximumBackoff": "600s",
    "minimumBackoff": "10s"
  },
  "state": "ACTIVE",
  "topic": "projects/${projectId}/topics/pubsubtopic-${uniqueId}"
}

---

GET https://pubsub.googleapis.com/v1/projects/${projectId}/subscriptions/pubsubsubscription-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

404 Not Found
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "error": {
    "code": 404,
    "message": "Resource not found (resource=pubsubsubscription-${uniqueId}).",
    "status": "NOT_FOUND"
  }
}

---

GET https://pubsub.googleapis.com/v1/projects/${projectId}/subscriptions/pubsubsubscription-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

200 OK
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "ackDeadlineSeconds": 600,
  "cloudStorageConfig": {
    "avroConfig": {
      "writeMetadata": true
    },
    "bucket": "storagebucket-1-${uniqueId}",
    "filenamePrefix": "test-prefix",
    "filenameSuffix": "test-suffix",
    "maxBytes": "10240",
    "maxDuration": "600s",
    "state": "ACTIVE"
  },
  "deadLetterPolicy": {
    "deadLetterTopic": "projects/${projectId}/topics/pubsubtopic-${uniqueId}",
    "maxDeliveryAttempts": 100
  },
  "enableMessageOrdering": true,
  "expirationPolicy": {
    "ttl": "2592000s"
  },
  "filter": "attributes.type = \"key\"",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "messageRetentionDuration": "604800s",
  "name": "projects/${projectId}/subscriptions/pubsubsubscription-${uniqueId}",
  "pushConfig": {},
  "retainAckedMessages": true,
  "retryPolicy": {
    "maximumBackoff": "600s",
    "minimumBackoff": "10s"
  },
  "state": "ACTIVE",
  "topic": "projects/${projectId}/topics/pubsubtopic-${uniqueId}"
}

---

PATCH https://pubsub.googleapis.com/v1/projects/${projectId}/subscriptions/pubsubsubscription-${uniqueId}?alt=json&updateMask=cloudStorageConfig%2CackDeadlineSeconds%2CmessageRetentionDuration%2CretainAckedMessages%2CexpirationPolicy%2CdeadLetterPolicy%2CretryPolicy
Content-Type: application/json
User-Agent: kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

{
  "subscription": {
    "ackDeadlineSeconds": 300,
    "cloudStorageConfig": {
      "bucket": "storagebucket-2-${uniqueId}",
      "filenamePrefix": "test-prefix-updated",
      "filenameSuffix": "test-suffix-updated",
      "maxBytes": 102400,
      "maxDuration": "400s",
      "state": "ACTIVE"
    },
    "deadLetterPolicy": {
      "deadLetterTopic": "projects/${projectId}/topics/pubsubtopic-${uniqueId}",
      "maxDeliveryAttempts": 50
    },
    "expirationPolicy": {
      "ttl": "1296000s"
    },
    "labels": {
      "cnrm-test": "true",
      "managed-by-cnrm": "true"
    },
    "messageRetentionDuration": "302400s",
    "retryPolicy": {
      "maximumBackoff": "300s",
      "minimumBackoff": "5s"
    }
  }
}

200 OK
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "ackDeadlineSeconds": 400,
  "cloudStorageConfig": {
    "bucket": "storagebucket-2-${uniqueId}",
    "filenamePrefix": "test-prefix-updated",
    "filenameSuffix": "test-suffix-updated",
    "maxBytes": "102400",
    "maxDuration": "400s",
    "state": "ACTIVE",
    "textConfig": {}
  },
  "deadLetterPolicy": {
    "deadLetterTopic": "projects/${projectId}/topics/pubsubtopic-${uniqueId}",
    "maxDeliveryAttempts": 50
  },
  "enableMessageOrdering": true,
  "expirationPolicy": {
    "ttl": "1296000s"
  },
  "filter": "attributes.type = \"key\"",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "messageRetentionDuration": "302400s",
  "name": "projects/${projectId}/subscriptions/pubsubsubscription-${uniqueId}",
  "pushConfig": {
    "attributes": {
      "x-goog-version": "v1"
    }
  },
  "retryPolicy": {
    "maximumBackoff": "300s",
    "minimumBackoff": "5s"
  },
  "state": "ACTIVE",
  "topic": "projects/${projectId}/topics/pubsubtopic-${uniqueId}"
}

---

GET https://pubsub.googleapis.com/v1/projects/${projectId}/subscriptions/pubsubsubscription-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

200 OK
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "ackDeadlineSeconds": 400,
  "cloudStorageConfig": {
    "bucket": "storagebucket-2-${uniqueId}",
    "filenamePrefix": "test-prefix-updated",
    "filenameSuffix": "test-suffix-updated",
    "maxBytes": "102400",
    "maxDuration": "400s",
    "state": "ACTIVE",
    "textConfig": {}
  },
  "deadLetterPolicy": {
    "deadLetterTopic": "projects/${projectId}/topics/pubsubtopic-${uniqueId}",
    "maxDeliveryAttempts": 50
  },
  "enableMessageOrdering": true,
  "expirationPolicy": {
    "ttl": "1296000s"
  },
  "filter": "attributes.type = \"key\"",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "messageRetentionDuration": "302400s",
  "name": "projects/${projectId}/subscriptions/pubsubsubscription-${uniqueId}",
  "pushConfig": {},
  "retryPolicy": {
    "maximumBackoff": "300s",
    "minimumBackoff": "5s"
  },
  "state": "ACTIVE",
  "topic": "projects/${projectId}/topics/pubsubtopic-${uniqueId}"
}

---

DELETE https://pubsub.googleapis.com/v1/projects/${projectId}/subscriptions/pubsubsubscription-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

200 OK
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{}

---

GET https://storage.googleapis.com/storage/v1/b/storagebucket-2-${uniqueId}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

200 OK
Content-Type: application/json; charset=UTF-8
Expires: {now+0m}
Server: UploadServer
Vary: Origin
Vary: X-Origin

{
  "etag": "abcdef0123A=",
  "generation": "1747815023696708144",
  "iamConfiguration": {
    "bucketPolicyOnly": {
      "enabled": false
    },
    "publicAccessPrevention": "inherited",
    "uniformBucketLevelAccess": {
      "enabled": false
    }
  },
  "id": "000000000000000000000",
  "kind": "storage#bucket",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "location": "US",
  "locationType": "multi-region",
  "metageneration": "1",
  "name": "storagebucket-2-${uniqueId}",
  "projectNumber": "${projectNumber}",
  "rpo": "DEFAULT",
  "selfLink": "https://www.googleapis.com/storage/v1/b/storagebucket-2-${uniqueId}",
  "softDeletePolicy": {
    "effectiveTime": "2024-04-01T12:34:56.123456Z",
    "retentionDurationSeconds": "604800"
  },
  "storageClass": "STANDARD",
  "timeCreated": "2024-04-01T12:34:56.123456Z",
  "updated": "2024-04-01T12:34:56.123456Z"
}

---

GET https://storage.googleapis.com/storage/v1/b/storagebucket-2-${uniqueId}/o?alt=json&prettyPrint=false&versions=true
User-Agent: google-api-go-client/0.5 kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

200 OK
Content-Type: application/json; charset=UTF-8
Expires: {now+0m}
Server: UploadServer
Vary: Origin
Vary: X-Origin

{
  "kind": "storage#objects"
}

---

DELETE https://storage.googleapis.com/storage/v1/b/storagebucket-2-${uniqueId}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

204 No Content
Content-Type: application/json
Expires: Mon, 01 Jan 1990 00:00:00 GMT
Pragma: no-cache
Server: UploadServer
Vary: Origin
Vary: X-Origin


---

GET https://storage.googleapis.com/storage/v1/b/storagebucket-1-${uniqueId}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

200 OK
Content-Type: application/json; charset=UTF-8
Expires: {now+0m}
Server: UploadServer
Vary: Origin
Vary: X-Origin

{
  "etag": "abcdef0123A=",
  "generation": "1747815021939994950",
  "iamConfiguration": {
    "bucketPolicyOnly": {
      "enabled": false
    },
    "publicAccessPrevention": "inherited",
    "uniformBucketLevelAccess": {
      "enabled": false
    }
  },
  "id": "000000000000000000000",
  "kind": "storage#bucket",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "location": "US",
  "locationType": "multi-region",
  "metageneration": "1",
  "name": "storagebucket-1-${uniqueId}",
  "projectNumber": "${projectNumber}",
  "rpo": "DEFAULT",
  "selfLink": "https://www.googleapis.com/storage/v1/b/storagebucket-1-${uniqueId}",
  "softDeletePolicy": {
    "effectiveTime": "2024-04-01T12:34:56.123456Z",
    "retentionDurationSeconds": "604800"
  },
  "storageClass": "STANDARD",
  "timeCreated": "2024-04-01T12:34:56.123456Z",
  "updated": "2024-04-01T12:34:56.123456Z"
}

---

GET https://storage.googleapis.com/storage/v1/b/storagebucket-1-${uniqueId}/o?alt=json&prettyPrint=false&versions=true
User-Agent: google-api-go-client/0.5 kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

200 OK
Content-Type: application/json; charset=UTF-8
Expires: {now+0m}
Server: UploadServer
Vary: Origin
Vary: X-Origin

{
  "kind": "storage#objects"
}

---

DELETE https://storage.googleapis.com/storage/v1/b/storagebucket-1-${uniqueId}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

204 No Content
Content-Type: application/json
Expires: Mon, 01 Jan 1990 00:00:00 GMT
Pragma: no-cache
Server: UploadServer
Vary: Origin
Vary: X-Origin


---

GET https://pubsub.googleapis.com/v1/projects/${projectId}/topics/pubsubtopic-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

200 OK
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "name": "projects/${projectId}/topics/pubsubtopic-${uniqueId}"
}

---

DELETE https://pubsub.googleapis.com/v1/projects/${projectId}/topics/pubsubtopic-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: kcc/${kccVersion} (+https://github.com/GoogleCloudPlatform/k8s-config-connector) kcc/controller-manager/${kccVersion}

200 OK
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{}