# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: bigquery.cnrm.cloud.google.com/v1beta1
kind: BigQueryTable
metadata:
  name: bigquerytable-${uniqueId}
  labels:
    labelkey: "labelvalue"
spec:
  resourceID: bigquerytable-${uniqueId}
  friendlyName: BigQuery Table
  description: "A BigQuery table full of data."
  datasetRef:
    name: bigquerydataset-${uniqueId}
  timePartitioning:
    type: DAY
    expirationMs: 2592000000 # 30 days
    field: date_column
  rangePartitioning:
    field: int_column
    range:
      start: 0
      end: 1000
      interval: 100
  clustering:
    - string_column1
    - string_column2
  schema: |
    [
      {
        "name": "string_column1",
        "type": "STRING",
        "mode": "NULLABLE",
        "description": "This is a string column."
      },
      {
        "name": "string_column2",
        "type": "STRING",
        "mode": "REQUIRED",
        "description": "This is another string column."
      },
      {
        "name": "int_column",
        "type": "INTEGER",
        "mode": "NULLABLE",
        "description": "This is an integer column."
      },
      {
        "name": "date_column",
        "type": "DATE",
        "mode": "NULLABLE",
        "description": "This is a date column."
      },
      {
        "name": "timestamp_column",
        "type": "TIMESTAMP",
        "mode": "NULLABLE",
        "description": "This is a timestamp column."
      },
      {
        "name": "struct_column",
        "type": "RECORD",
        "mode": "NULLABLE",
        "description": "This is a struct column.",
        "fields": [
          {
            "name": "nested_string_column",
            "type": "STRING",
            "mode": "NULLABLE",
            "description": "This is a nested string column."
          },
          {
            "name": "nested_int_column",
            "type": "INTEGER",
            "mode": "NULLABLE",
            "description": "This is a nested integer column."
          }
        ]
      }
    ]
  expirationTime: 1609459200000 # 2021-01-01 00:00:00 UTC
  requirePartitionFilter: true
  encryptionConfiguration:
    kmsKeyRef:
      name: kmscryptokey-${uniqueId}
  externalDataConfiguration:
    autodetect: true
    sourceUris:
      - "gs://test-bucket/test-data.csv"
    sourceFormat: CSV
    compression: GZIP
    ignoreUnknownValues: true
    maxBadRecords: 10
    csvOptions:
      quote: '"'
      allowJaggedRows: true
      allowQuotedNewlines: true
      encoding: UTF-8
      fieldDelimiter: ","
      skipLeadingRows: 1
    hivePartitioningOptions:
      mode: AUTO
      sourceUriPrefix: "gs://test-bucket/test-data/"
      requirePartitionFilter: false
    schema: |
      [
        {
          "name": "external_string_column",
          "type": "STRING",
          "mode": "NULLABLE",
          "description": "This is an external string column."
        }
      ]
  view:
    query: "SELECT * FROM `project.dataset.othertable`"
    useLegacySql: false
  materializedView:
    query: "SELECT COUNT(*) FROM `project.dataset.othertable`"
    enableRefresh: true
    refreshIntervalMs: 1800000 # 30 minutes
  tableConstraints:
    primaryKey:
      columns:
        - string_column1
    foreignKeys:
      - name: fk_name
        columnReferences:
          referencingColumn: string_column2
          referencedColumn: other_string_column
        referencedTable:
          projectId: ${projectId}
          datasetId: other_dataset-${uniqueId}
          tableId: other_table-${uniqueId}
  maxStaleness: "INTERVAL 1 HOUR"
